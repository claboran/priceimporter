-- Region dimension

create SEQUENCE int_test_region_seq INCREMENT BY 1;

create COLUMN TABLE int_test_d_region (
  id BIGINT PRIMARY KEY NOT NULL,
  region NVARCHAR(50)
);

-- PeriodType dimension

create SEQUENCE int_test_period_type_seq INCREMENT BY 1;

create COLUMN TABLE int_test_d_period_type (
  id BIGINT PRIMARY KEY NOT NULL,
  period_type NVARCHAR(50)
);

-- Time date dimension

create SEQUENCE int_test_date_time_seq INCREMENT BY 1;

create COLUMN TABLE int_test_d_date_time (
  id BIGINT PRIMARY KEY NOT NULL,
  day_of_month INTEGER,
  month_of_year INTEGER,
  the_year INTEGER,
  hour_of_day INTEGER,
  minutes_of_hour INTEGER
);

-- Fact table

create SEQUENCE int_test_fact_seq INCREMENT BY 1;

create COLUMN TABLE int_test_f_energy_price_demand (
  id BIGINT PRIMARY KEY NOT NULL,
  total_Demand DECIMAL(20,2),
  rpr DECIMAL(20,2),
  d_region_id BIGINT NOT NULL,
  d_period_type_id BIGINT NOT NULL,
  d_date_time_id BIGINT NOT NULL,
  FOREIGN KEY (d_region_id) REFERENCES int_test_d_region(id),
  FOREIGN KEY (d_period_type_id) REFERENCES int_test_d_period_type(id),
  FOREIGN KEY (d_date_time_id) REFERENCES int_test_d_date_time(id)
);

--
-- Spring Batch tables
--
CREATE COLUMN TABLE INT_TEST_BATCH_JOB_INSTANCE  (
  JOB_INSTANCE_ID BIGINT PRIMARY KEY NOT NULL ,
  VERSION BIGINT ,
  JOB_NAME VARCHAR(100) NOT NULL,
  JOB_KEY VARCHAR(32) NOT NULL
) ;

ALTER TABLE INT_TEST_BATCH_JOB_INSTANCE ADD CONSTRAINT INT_TEST_JOB_INST_UN UNIQUE (JOB_NAME, JOB_KEY);

CREATE COLUMN TABLE INT_TEST_BATCH_JOB_EXECUTION  (
  JOB_EXECUTION_ID BIGINT PRIMARY KEY NOT NULL ,
  VERSION BIGINT  ,
  JOB_INSTANCE_ID BIGINT NOT NULL,
  CREATE_TIME TIMESTAMP NOT NULL,
  START_TIME TIMESTAMP DEFAULT NULL ,
  END_TIME TIMESTAMP DEFAULT NULL ,
  STATUS VARCHAR(10) ,
  EXIT_CODE VARCHAR(2500) ,
  EXIT_MESSAGE VARCHAR(2500) ,
  LAST_UPDATED TIMESTAMP,
  JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
  foreign key (JOB_INSTANCE_ID)
  references INT_TEST_BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ;

CREATE COLUMN TABLE INT_TEST_BATCH_JOB_EXECUTION_PARAMS  (
  JOB_EXECUTION_ID BIGINT NOT NULL ,
  TYPE_CD VARCHAR(6) NOT NULL ,
  KEY_NAME VARCHAR(100) NOT NULL ,
  STRING_VAL VARCHAR(250) ,
  DATE_VAL TIMESTAMP DEFAULT NULL ,
  LONG_VAL BIGINT ,
  DOUBLE_VAL DOUBLE PRECISION ,
  IDENTIFYING CHAR(1) NOT NULL ,
  foreign key (JOB_EXECUTION_ID)
  references INT_TEST_BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE COLUMN TABLE INT_TEST_BATCH_STEP_EXECUTION  (
  STEP_EXECUTION_ID BIGINT PRIMARY KEY NOT NULL ,
  VERSION BIGINT NOT NULL,
  STEP_NAME VARCHAR(100) NOT NULL,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  START_TIME TIMESTAMP NOT NULL ,
  END_TIME TIMESTAMP DEFAULT NULL ,
  STATUS VARCHAR(10) ,
  COMMIT_COUNT BIGINT ,
  READ_COUNT BIGINT ,
  FILTER_COUNT BIGINT ,
  WRITE_COUNT BIGINT ,
  READ_SKIP_COUNT BIGINT ,
  WRITE_SKIP_COUNT BIGINT ,
  PROCESS_SKIP_COUNT BIGINT ,
  ROLLBACK_COUNT BIGINT ,
  EXIT_CODE VARCHAR(2500) ,
  EXIT_MESSAGE VARCHAR(2500) ,
  LAST_UPDATED TIMESTAMP,
  foreign key (JOB_EXECUTION_ID)
  references INT_TEST_BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE COLUMN TABLE INT_TEST_BATCH_STEP_EXECUTION_CONTEXT  (
  STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
  SHORT_CONTEXT VARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT NCLOB ,
  foreign key (STEP_EXECUTION_ID)
  references INT_TEST_BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ;

CREATE COLUMN TABLE INT_TEST_BATCH_JOB_EXECUTION_CONTEXT  (
  JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
  SHORT_CONTEXT VARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT NCLOB ,
  foreign key (JOB_EXECUTION_ID)
  references INT_TEST_BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE SEQUENCE INT_TEST_BATCH_STEP_EXECUTION_SEQ;
CREATE SEQUENCE INT_TEST_BATCH_JOB_EXECUTION_SEQ;
CREATE SEQUENCE INT_TEST_BATCH_JOB_SEQ;